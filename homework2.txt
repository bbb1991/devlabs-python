1. считать с файла numbers.txt цифры. Вывести на экран, сколько номеров уникальные, то есть не повторяются.
Подсказка. Чтобы при считываний файла не появлялась \n, необходимо считывать так:
    my_list = f.read().splitlines()

2. считать с файла numbers.txt цифры. Создать файл numbers2.txt и записать туда цифры, которые повторяются более 1 раза

3. Напишите программу, которая выводит часть последовательности 1 2 2 3 3 3 4 4 4 4 5 5 5 5 5 ...
(число повторяется столько раз, чему равно). На вход программе передаётся положительное целое число
n — столько элементов последовательности должна отобразить программа.
На выходе ожидается последовательность чисел, записанных через пробел в одну строку. Если подается отрицательное число,
напечатать impossible
Пример:
    Ввод:
        7
    Выход:
        1 2 2 3 3 3 4

4. Напишите функцию modify_list(l), которая принимает на вход список целых чисел, удаляет из него все нечётные значения,
а чётные нацело делит на два. Печатать или возвращать ничего не нужно, только изменить переданный список.
Пример:
    lst = [1, 2, 3, 4, 5, 6]
    print modify_list(lst)  # None
    print lst               # [1, 2, 3]

5. Считать текст с файла my_text.txt. Вывести на экран какие слова сколько раз встречается.
К прочтению: http://breys.ru/1862.html
Пример:
    Ввод:
        a aa abC aa ac abc bcd a
    Выход:
        ac 1
        a 2
        abc 2
        bcd 1
        aa 2

6. Есть файл с названием exam_results.csv (https://ru.wikipedia.org/wiki/CSV), который хранить результаты экзаменов в формате:
    Фамилия,ОЦЕНКА_ЗА_МАТЕМАТИКУ,ОЦЕНКА_ЗА_ФИЗИКУ,ОЦЕНКА_ЗА_ХИМИЮ
Пример:
    Иванов,80,70,67
Необходимо считать из файла данные, и записать в файл result.txt фамилий тех, у кого оценка по экзаменам больше 60
(Если у хоть один из экзаменов меньше 60 значит студент не прошел и его фамилию не записывать)
(Подсказка. Можно использовать модуль готовый csv либо считать как обычный текстовый файл и прочитанную строку разбить
с помощью split(','))

7. Написать приложение, который принимает адрес сайта, который печатает на экран название сервера, на котором крутится сайт.
необходимо принимать адрес как аргумент при запуске.
К примеру: python script.py https://google.com
Пример.
    Ввод:
        http://www.pokehof.de:5000/
    Вывод:
        Werkzeug/0.11.10 Python/2.7.12

    Ввод:
        http://www.technologijos.lt/
    Вывод:
        Zope/(Zope 2.7.5-final, python 2.3.5, linux2) ZServer/1.1 Plone/2.0.5

8. Написать функцию по генерации пароля. Функция будет принимать один параметр длина.
Не просто набор букв и символов а согласно требованию стенфордского университета
https://uit.stanford.edu/service/accounts/passwords

9. Дан tsv (https://ru.wikipedia.org/wiki/TSV) файл. В этом файле информация о классе, фамилий учащегося и его рост.
Необходимо вывести средний рост учеников в классе
Пример:
    6	Вяххи	159
    11	Федотов	172
    7	Бондарев	158
    6	Чайкина	153

Выход:
    1 -
    2 -
    3 -
    4 -
    5 -
    6 156.0
    7 158.0
    8 -
    9 -
    10 -
    11 172.0

К прочтению.
List:  https://pythonworld.ru/tipy-dannyx-v-python/spiski-list-funkcii-i-metody-spiskov.html
Tuple: https://pythonworld.ru/tipy-dannyx-v-python/kortezhi-tuple.html
Set: https://pythonworld.ru/tipy-dannyx-v-python/mnozhestva-set-i-frozenset.html

import: https://pythonworld.ru/osnovy/rabota-s-modulyami-sozdanie-podklyuchenie-instrukciyami-import-i-from.html
        https://wombat.org.ua/AByteOfPython/modules.html
    os: https://pythonworld.ru/moduli/modul-os.html
    sys: https://docs.python.org/3/library/sys.html
    urllib2: http://python-for-web.blogspot.com/2014/06/urllib2-python.html
    random: http://ps.readthedocs.io/ru/latest/random.html
Рекурсия:
    http://pythontutor.ru/lessons/functions/